<?xml version="1.0" encoding="UTF-8" standalone="no"?><simplicity><class index="1" methodCount="13" name="com.bonafideideas.Calculator"><Method>public float com.bonafideideas.Calculator.Sum(float,float)</Method><Method>public float com.bonafideideas.Calculator.Multiply(float,float)</Method><Method>public float com.bonafideideas.Calculator.Subtract(float,float)</Method><Method>public float com.bonafideideas.Calculator.Divide(float,float)</Method><Method>public final void java.lang.Object.wait() throws java.lang.InterruptedException</Method><Method>public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException</Method><Method>public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException</Method><Method>public boolean java.lang.Object.equals(java.lang.Object)</Method><Method>public java.lang.String java.lang.Object.toString()</Method><Method>public native int java.lang.Object.hashCode()</Method><Method>public final native java.lang.Class java.lang.Object.getClass()</Method><Method>public final native void java.lang.Object.notify()</Method><Method>public final native void java.lang.Object.notifyAll()</Method></class><class index="2" methodCount="10" name="com.bonafideideas.Main"><Method>public static void com.bonafideideas.Main.main(java.lang.String[])</Method><Method>public final void java.lang.Object.wait() throws java.lang.InterruptedException</Method><Method>public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException</Method><Method>public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException</Method><Method>public boolean java.lang.Object.equals(java.lang.Object)</Method><Method>public java.lang.String java.lang.Object.toString()</Method><Method>public native int java.lang.Object.hashCode()</Method><Method>public final native java.lang.Class java.lang.Object.getClass()</Method><Method>public final native void java.lang.Object.notify()</Method><Method>public final native void java.lang.Object.notifyAll()</Method></class></simplicity>